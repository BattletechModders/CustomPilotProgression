Мод предназначен для расширения механики прокачки пилота. Пилот может получать абстрактный опыт, но и специфический опыт связанный к конкретными действиями.
В частности со стрельбой из оружия. 
Можно определить "экспертизы" - сущности в в которых пилот накапливает опыт

Эти сущности описываются в кастомном ресурсе типа PilotWeaponLevelingDef

{
  "Description": {                                     - стандартное описание тут никаких особенностей нет, кроме того, что UIName должно быть задано обязательно
	                                                       в пользовательском интерфейсе будет использоваться именно оно, если оно не задано Name использоваться НЕ БУДЕТ
																												 и вы получите пустые строки в интерфейсе
    "UIName": "Ballistic",
    "Id": "pilotweaponlevelingdef_Ballistic",
    "Name": "ballistic leveling",
    "Details": "Ballistic Leveling",
    "Icon": "weapon_omni"
  },
  "HeaderChar": "B",                                  - Должен быть только один символ, используется когда необходимо показать данные об экспертизе в максимально краткой форме
  "Color":"#CCCC00",                                  - цвет для текста, в тек местах интерфейса, где это уместно будет использоваться данный цвет для текста
  "levels": [                                         - перечень уровней, который может быть достигнут в данном классе. 
	{
  	  "experience": 0,                                - количество опыта для достижения данного уровня
	  "Color": "yellow",                                - цвет для текста, в тек местах интерфейса, где это уместно будет использоваться данный цвет для текста
	  "HeaderChar": "0",                                - Должен быть только один символ, используется когда необходимо показать данные об уровне в максимально краткой форме
	  "progression": [                                  - информация о том сколько опыта пилот будет получать при стрельбе из оружия при данном уровне опыта
	  	  { 
					"chance": 0,                                - шанс на попадание
					"fail_exp": 10,                             - количество опыта при промахе
					"success_exp":20                            - количество опыта при попадании
				},
	  	  { "chance": 0.25, "fail_exp": 8, "success_exp":16 },
	  	  { "chance": 0.50, "fail_exp": 6, "success_exp":12 },
	  	  { "chance": 0.75, "fail_exp": 4, "success_exp":8 },
				
				Заметка:
				Работает это так - после атаки данным типом оружия (не выстрела а именно атаки, пушки делающие много бросков на попадание за залп не имеют преимуществ), 
				производится поиск в данном массиве записи с chance с наибольшим значением, но меньшим чем текущий эффективный шанс на попадание из данного оружия.
				Вычисляется доля попавших куда-либо пуль (неважно в ту цель в которую целелись или нет), без учета урона по площади (который всегда попадает)
				По доле попавших пуль вычисляется точка между "количество опыта при промахе" и "количество опыта при попадании" и это количество опыта добавляется пилоту в данном классе "экспертизы"
				Например: вы стреляете из ротарной LBX5 в режиме x3, с шансом 53%. По таблице ваша запись "chance": 0.50, "fail_exp": 6, "success_exp":12
				Всего вылетело 5x3 = 15 пуль, предположим попало из них 10. Пилот получит очков опыта (12 - 6) * (10/15) + 6 = 10 очков опыта. 
				При достижения количества опыта для определнного уровня, реальное применение бонусов будет произведено только в следующей битве, однако начиление очков опыта будет производится 
				в соотвествии с правилами уже нового уровня, это не ошибка, это сделано так специально. 
				Концептуальная идея разработчика о балансе прокачки состоит в том, что при низких уровнях опытности пилот должен получать достаточное количество опыта даже при промахах, 
				однако на высоких уровнях и при высоких шансах на попадание количество получаемого опыта должно снижаться - должно быть легко прокачаться до какого-то среднего уровня владения,
				дальнейший же прогресс должен быть существенно замедлен. 
	  ],
	  "levelDef":"" - идентификатор UpgradeDef компонента, который служит контейнером для бонусов предоставляемых данным уровнем владения оружием. Может быть пустым.
		                Хорошей идеей было бы создание компонента с дабафами для низких уровней владения оружием. 
										При инициализации юнита ему будет добавлен компонент данного типа в локацию 0 (None) т.е. компонент будет фактически не разрушим 
										Единственная особенность - способности добавляемые компонентом будут добавлены как способности пилота, а не в панель вооружения 
										как это делается для обычных компонентов добавляющих способности.
    },
	{
  	  "experience": 1000,
	  "Color": "green",
	  "HeaderChar": "1",
	  "progression": [
	  	  { "chance": 0, "fail_exp": 8, "success_exp":16 },
	  	  { "chance": 0.25, "fail_exp": 6, "success_exp":12 },
	  	  { "chance": 0.50, "fail_exp": 4, "success_exp":8 },
	  	  { "chance": 0.75, "fail_exp": 2, "success_exp":4 },
	  ],
	  "levelDef":"weaponleveldef_Ballistic_1"
    }
  ]
}

Особенности пользовательского интерфейса:

В кратком виде опыт плота отображается вместо строки экспертизы пилота (новобранец, ветеран и т.д.) теперь эта строка заменена на 
строку вида "<экспертиза1.HeaderChar><уровень.HeaderChar> <экспертиза2.HeaderChar><уровень.HeaderChar> ..."\

Настройки мода 

	"defaultGenerator":{   - генератор уровня опытности по умолчанию, см. раздел Генераторы уровня опытности
		"id":"default", "experience_min": 0, "experience_max": 2000, "experience_cap_min":1000, "experience_cap_max": 4000
	},
	"ChangedChar":"^",     - этот символ будет добавлен в начале строки экспертизы, если уровень опытности пилота изменился
	"ChangedCharColor":"yellow", - цвет вышеуказанного символа
	"ChangedColor":"#C1FF33FF",  - цвет, которым будет мигать фон строки экспертизы, если уровень опытности пилота изменился
	"LevelingBackColor":"#3366FF", - цвет фона элемента интерфейса представляющего класс опытности
	"LevelNotSelectedBackColor":"#808080", - цвет фона элемента интерфейса представляющего уровень опытности, если уровень не является текущим для пилота
	"LevelSelectedBackColor":"#008000" - цвет фона элемента интерфейса представляющего уровень опытности, если уровень является текущим для пилота
	
	
Генераторы опытности

уровень оптыности для пилота можно задать в json-файле PilotDef в разделе

"WeaponsProgression" : {
	"progression": {
		"pilotweaponlevelingdef_Ballistic": - идентификатор экспертизы
		{
			"experience": 234, - уровень опыта
			"experience_cap": 2000 - максимальный уровень опыта
		}
	}
}

Если у пилота отсутствует определение уровня опытности в каком-то классе экспертизы или если пилот сгенерирован случайным образом
текущий уровень опыта и максимальный уровень будут сгенерированны случайным образом. 
Для контроля этого процесса имеется возможность создать т.к.н. генераторы
Генератор сущность описываемая кастомным классом WeaponProgressionGenerator
{
	"id": "generator",  - идентификатор
	"experience_min": 0, - минимальный уровень опыта
	"experience_max": 2000, - максимальный уровень опыта
	"experience_cap_min": 0, - минимальный уровень лимита опыта
	"experience_cap_max": 2000, - максимальный уровень лимита опыта
	"systemTags": [], - тэги системы
	"pilotTags": [], - тэги пилота
	"levelings": [] - перечень класов экспертизы
}
Если пилоту необходимо сгенерировать экспертизу в каком-либо классе производится поиск среди всех доступных генераторов
По следующим криетриям
1. Если у генератора systemTags не пустой и контекст звездной системы имеет смысл, то система должна обладать всеми тегами указанными в определении генератора
2. Если у генератора pilotTags не пустой - пилот должен обладать всеми тегами указанными в определении генератора
3. Если у генератора levelings не пустой - идентификатор класса экспертизы должен присутствовать в перечне levelings

Если все эти три условия выполняются - генератор считается подходящим - выбирается первый подходящий генератор, генераторы сортируются непредсказуемым образом, 
по этому хорошей идеей будет определять непересекающиеся генераторы. Генератор с пустыми systemTags, pilotTags и levelings будет считаться подходящим во всех случаях.
Если подходящий генератор не был найден будет использоваться генератор определенный в defaultGenerator настроек мода. 

Связь оружия и класса экспертизы

У каждого оружия может быть только один класс экспертизы. Он определяется следующим образом - среди тегов оружия производится поиск тега 
с названием "progression_type_<суффикс идентификатор экспертизы>", если такой тег найден производится поиск класса экспертизы с идентификатором "pilotweaponlevelingdef_<суффикс идентификатор экспертизы>" 
Если экспертиза с таким идентификатором найдена - этот класс считается классом экспертизы для данного оружия.
Если поиск по тегам не дал результата - производится поиск класса экспертизы по категории оружия.
Производится поиск класса экспертиза с идентификатором "pilotweaponlevelingdef_<категория оружия>".
Если экспертиза с таким идентификатором найдена - этот класс считается классом экспертизы для данного оружия.


